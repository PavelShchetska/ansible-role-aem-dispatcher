---
# file: tasks/configure.yml

- name: prepare all required variables
  set_fact:
    httpd_conf_file: "{{ apache_dir }}/{{ ( ansible_os_family == 'Debian' ) | ternary( 'apache2','conf/httpd' ) }}.conf"
    ssl_conf_file: "{{ apache_dir }}/{{ ( ansible_os_family == 'Debian' ) | ternary( 'conf-available','conf.d' ) }}/ssl.conf"

- name: ensure that httpd.conf is correct
  become: True
  template:
    src: "{{ ( ansible_os_family == 'Debian' ) | ternary( 'apache2','httpd' ) }}.conf.j2"
    dest: "{{ httpd_conf_file }}"
    owner: '{{ web_server_user }}'
    group: '{{ web_server_group }}'
    backup: True
  notify:
  - restart apache
- meta: flush_handlers

- block:

  - name: Install ssl module for apache
    package:
      name: mod_ssl
      state: present
    register: installed_packages
    until: installed_packages is succeeded
    when:
      - ansible_os_family == 'RedHat'
    notify:
    - restart apache

  - name: ensure that ssl.conf is correct
    become: True
    template:
      src: ssl.conf.j2
      dest: '{{ ssl_conf_file }}'
      owner: '{{ web_server_user }}'
      group: '{{ web_server_group }}'
      backup: True
    when: ansible_os_family == 'RedHat'
    notify:
    - restart apache

  - name: Prepare ssl for Debian
    include: Debian_ssl.yml
    when:
      - ansible_os_family == 'Debian'
      - use_native_cert

  - name: Change cert source path in Redhat
    set_fact:
      cert_source_file: '{{ certs_path }}/certs/localhost.crt'
      key_source_file: '{{ certs_path }}/private/localhost.key'
    when:
      - ansible_os_family == 'RedHat'
      - use_native_cert

  - name: Change cert source path in Debian
    set_fact:
      cert_source_file: '{{ certs_path }}/certs/ssl-cert-snakeoil.pem'
      key_source_file: '{{ certs_path }}/private/ssl-cert-snakeoil.key'
    when:
      - ansible_os_family == 'Debian'
      - use_native_cert

  - name: Copy certificate for host
    copy:
      remote_src: "{{ ( use_native_cert ) | ternary( 'True','False' ) }}"
      src: '{{ cert_source_file }}'
      dest: '{{ cert_dest_file }}'
      owner: '{{ web_server_user }}'
      group: '{{ web_server_group }}'
    notify: restart apache

  - name: Copy key for host
    copy:
      remote_src: "{{ ( use_native_cert ) | ternary( 'True','False' ) }}"
      src: '{{ key_source_file }}'
      dest: '{{ key_dest_file }}'
      owner: '{{ web_server_user }}'
      group: '{{ web_server_group }}'
    notify: restart apache

  become: True
  when: web_server_ssl
