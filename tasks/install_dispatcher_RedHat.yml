---
# file: tasks/install.yml

- name: ensure that dispatcher configuration files are ok
  become: True
  template:
    src: '{{ item }}.j2'
    dest: '{{ dispatcher_any_location }}/{{ item }}'
    owner: '{{ web_server_user }}'
    group: '{{ web_server_group }}'
    mode: 0755
  with_items:
    - '{{ dispatcher_config_set }}'
  notify:

- name: 'ensure that {{ dispatcher_root }} path is ready'
  file:
    path: '{{ dispatcher_root }}'
    owner: '{{ web_server_user }}'
    group: '{{ web_server_group }}'
    state: directory
    mode: 0755
  become: True
  notify:

- name: ensure that dispatcher module is present
  get_url:
    url: '{{ ftp_server_link }}'
    dest: '{{ apache_dir }}/modules/mod_dispatcher.so'
    owner: '{{ web_server_user }}'
    group: '{{ web_server_group }}'
    mode: 0755
  become: True

#- name: Check if mod_dispatcher.so exists
#  stat:
#    path: '{{ apache_dir }}/modules/mod_dispatcher.so'
#  register: st
#- debug:
#    msg: "{{ st.stat }}"
  #when: not st.stat.exists

- name: Allow apache to load module
  sefcontext:
    target: "/etc/httpd/modules/mod_dispatcher.so"
    setype: httpd_sys_script_exec_t
    state: present
  when:
    - ansible_selinux.status == 'enabled'
    - ansible_selinux.mode != 'disabled'
  become: True

- name: ensure that main dispatcher configuration is ok
  template:
    src: dispatcher.conf.j2
    dest: '{{ apache_dir }}/conf.d/dispatcher.conf'
    owner: '{{ web_server_user }}'
    group: '{{ web_server_group }}'
    mode: 0755
  notify:
  - restart apache
  become: True
- meta: flush_handlers
  ignore_errors: True

- name: return to registered var
  shell: sudo cat /var/log/httpd/error_log
#    - sudo systemctl restart httpd
#    - systemctl status httpd
  register: restart
  tags:
    - skip_ansible_lint
- debug:
    var: restart
#    - sudo cat /var/log/httpd/error_log
#  register: error_log
#  tags:
#    - skip_ansible_lint
#- debug:
#    var: error_log
