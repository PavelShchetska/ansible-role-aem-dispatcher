---
# file: tasks/set_facts.yml

- name: reinitialization of defaults as variables
  set_fact:
    dispatcher_module_version: '{{ dispatcher_module_version }}'
    dispatcher_root: '{{ dispatcher_root }}'

- name: variables preparation
  set_fact:
    ftp_common_link: "{{ lookup('env','STORAGE_AWS') }}aem/dispatcher/dispatcher-\
    {{ dispatcher_module_version }}-apache-{{ apache_version }}"
    semanage_sh_file: '{{ dispatcher_root }}/semanage.sh'
    dispatcher_any_location: '{{ apache_dir }}/conf'
    dispatcher_config_set:
      - dispatcher.any
      - filters.any
      - invalidate.any
      - renders.any
      - vhosts.any
      - clientheaders.any
    dispatcher_back: []

- name: check if dispatcherBack are present
  fail:
    msg: "No dispatcherBack available!"
  when: render is undefined and 'aem_instances' not in group_names

- name: find dispatcherBack for dispatcher without render
  set_fact:
    dispatcher_back: "{{ dispatcher_back + [ inventory_hostname ] }}"
  when: render is undefined

- name: find dispatcher_back for dispatcher with render
  set_fact:
    dispatcher_back: "{{ dispatcher_back + [ item ] }}"
  with_items: "{{ render.split(',') }}"
  when: render is defined

- name: rewrite dispatcher_back if it is test docker container
  set_fact:
    dispatcher_back: ['localhost']
  when: "inventory_hostname == 'test-docker-dispatcher'"

- name: prepare FTP Link variable (with SSL)
  set_fact:
    ftp_server_link: '{{ ftp_common_link }}-ssl.so'
  when: web_server_ssl
- name: prepare FTP Link variable (without SSL)
  set_fact:
    ftp_server_link: '{{ ftp_common_link }}.so'
  when: not web_server_ssl
